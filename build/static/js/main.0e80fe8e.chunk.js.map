{"version":3,"sources":["contexts/AuthContext.js","components/navigation/Navbar.js","components/app/HomePage.js","components/app/NewStudentInfoPage.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","React","useState","errorState","setErrorState","errorMessage","setErrorMessage","isAuthenticated","setIsAuthenticated","activeUser","setActiveUser","appID","useMemo","AppID","a","init","clientId","discoveryEndpoint","message","loginAction","signin","tokens","userid","idTokenPayload","identities","id","email","given_name","family_name","accessToken","signOut","Provider","value","children","Navbar","useContext","history","useHistory","className","href","onClick","e","push","to","HomePage","style","marginTop","src","alt","color","NewStudentInfoPage","firstName","setFirstName","lastName","setLastName","setEmail","age","setAge","location","setLocation","fathersName","setFathersName","mothersName","setMothersName","hscName","setHscName","hscMarks","setHscMarks","sscName","setSscName","sscMarks","setSscMarks","checkingExistingStatus","setcheckingExistingStatus","isExistingStudent","setIsExistingStudent","existingDocId","setExistingDocId","existingDocRev","setExistingDocRev","sendingDataToCloud","setSendingDataToCloud","useEffect","console","log","getConfig","headers","params","axios","get","then","resp","data","docs","length","doc","_id","_rev","catch","err","submitNewStudentInfo","postConfig","post","error","M","toast","html","classes","updateExistingStudentInfo","putConfig","put","height","onSubmit","preventDefault","parseInt","parseFloat","handleFormSubmit","placeholder","type","disabled","onChange","target","htmlFor","width","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e80fe8e.chunk.js","sourcesContent":["import React, { createContext } from 'react'\r\nimport AppID from 'ibmcloud-appid-js';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [errorState, setErrorState] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n    const [activeUser, setActiveUser] = React.useState({});\r\n\r\n    const appID = React.useMemo(() => {\r\n        return new AppID()\r\n    }, []);\r\n\r\n    (async () => {\r\n        try {\r\n            await appID.init({\r\n                clientId: 'fbc839fc-0e06-48b4-84f0-b3df06110b12',\r\n                discoveryEndpoint: 'https://eu-gb.appid.cloud.ibm.com/oauth/v4/0c36acd7-c6e6-4a7b-a932-989d33105fcf/.well-known/openid-configuration'\r\n            });\r\n        } catch (e) {\r\n            setErrorState(true);\r\n            setErrorMessage(e.message);\r\n        }\r\n    })();\r\n\r\n    const loginAction = async () => {\r\n        try {\r\n            const tokens = await appID.signin();\r\n            setErrorState(false);\r\n            setErrorMessage('');\r\n            setIsAuthenticated(true);\r\n            setActiveUser({\r\n                userid: tokens.idTokenPayload.identities[0].id,\r\n                email: tokens.idTokenPayload.email,\r\n                given_name: tokens.idTokenPayload.given_name,\r\n                family_name: tokens.idTokenPayload.family_name,\r\n                accessToken: tokens.accessToken\r\n            })\r\n        } catch (e) {\r\n            setErrorState(true);\r\n            setErrorMessage(e.message);\r\n            setIsAuthenticated(false);\r\n            setActiveUser({});\r\n        }\r\n    };\r\n\r\n    const signOut = async () => {\r\n        setErrorState(false);\r\n        setErrorMessage('');\r\n        setIsAuthenticated(false);\r\n        setActiveUser({});\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            errorState,\r\n            errorMessage,\r\n            isAuthenticated,\r\n            activeUser,\r\n            loginAction,\r\n            signOut\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, Fragment } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    const { isAuthenticated, signOut } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOutClick = () => {\r\n        if (isAuthenticated) {\r\n            signOut();\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n            <nav className=\"white\">\r\n                <div className=\"nav-wrapper\">\r\n                    <a href=\"#!\" className=\"brand-logo left indigo-text text-darken-4\">Academia College</a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        {!isAuthenticated ? (\r\n                            <Fragment>\r\n                                <li>\r\n                                    <Link to='/' className=\"grey-text text-darken-4\">Sign in</Link>\r\n                                </li>\r\n                            </Fragment>\r\n                        ) : (\r\n                                <Fragment>\r\n                                    <li>\r\n                                        <Link onClick={(e) => handleSignOutClick(e)} to='#' className=\"grey-text text-darken-4\">Sign Out</Link>\r\n                                    </li>\r\n                                </Fragment>\r\n                            )}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\n\r\nfunction HomePage() {\r\n    const {\r\n        errorState,\r\n        errorMessage,\r\n        isAuthenticated,\r\n        loginAction,\r\n    } = useContext(AuthContext);\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/newstudentinfo\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 center-align\">\r\n                    <div style={{ marginTop: 50 }}>\r\n                        <img src=\"/images/logo/collegelogo.png\" alt=\"college_logo\" />\r\n                        <h4>Please Login/SignUp to<br />register new student details</h4>\r\n                        <Link\r\n                            to=\"#\"\r\n                            className=\"waves-effect waves-light btn indigo darken-4\"\r\n                            style={{ marginTop: 30 }}\r\n                            onClick={loginAction}\r\n                        >Click here to Proceed</Link>\r\n                        {errorState && <div style={{ color: 'red', marginTop: 10 }}>{errorMessage}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useContext, useState, useEffect, Fragment } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\nimport M from 'materialize-css';\r\nimport axios from 'axios';\r\n\r\nfunction NewStudentInfoPage() {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [age, setAge] = useState(0);\r\n    const [location, setLocation] = useState('');\r\n    const [fathersName, setFathersName] = useState('');\r\n    const [mothersName, setMothersName] = useState('');\r\n    const [hscName, setHscName] = useState('');\r\n    const [hscMarks, setHscMarks] = useState(0.0);\r\n    const [sscName, setSscName] = useState('');\r\n    const [sscMarks, setSscMarks] = useState(0.0);\r\n\r\n    const [checkingExistingStatus, setcheckingExistingStatus] = useState(true);\r\n    const [isExistingStudent, setIsExistingStudent] = useState(false);\r\n    const [existingDocId, setExistingDocId] = useState('');\r\n    const [existingDocRev, setExistingDocRev] = useState('');\r\n\r\n    const [sendingDataToCloud, setSendingDataToCloud] = useState(false);\r\n\r\n    const {\r\n        isAuthenticated,\r\n        activeUser,\r\n        signOut\r\n    } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        console.log('activeUser', activeUser);\r\n        if (activeUser.email && activeUser.accessToken) {\r\n\r\n            var getConfig = {\r\n                headers: {\r\n                    'Authorization': `Bearer ${activeUser.accessToken}`,\r\n                },\r\n                params: {\r\n                    \"email\": activeUser.email\r\n                }\r\n            };\r\n\r\n            axios.get('https://10a7902a.eu-gb.apigw.appdomain.cloud/sim/get-student-info', getConfig)\r\n                .then((resp) => {\r\n                    console.log(\"Response received: \", resp);\r\n                    if (resp.data.docs.length > 0) {\r\n                        var doc = resp.data.docs[0];\r\n\r\n                        setFirstName(activeUser.given_name);\r\n                        setLastName(activeUser.family_name);\r\n                        setEmail(activeUser.email);\r\n                        setAge(doc.age);\r\n                        setLocation(doc.location);\r\n                        setFathersName(doc.fathersName);\r\n                        setMothersName(doc.mothersName);\r\n                        setHscName(doc.hscName);\r\n                        setHscMarks(doc.hscMarks);\r\n                        setSscName(doc.sscName);\r\n                        setSscMarks(doc.sscMarks);\r\n\r\n                        setIsExistingStudent(true);\r\n                        setExistingDocId(doc._id);\r\n                        setExistingDocRev(doc._rev);\r\n\r\n                        setcheckingExistingStatus(false);\r\n                    } else {\r\n                        setFirstName(activeUser.given_name);\r\n                        setLastName(activeUser.family_name);\r\n                        setEmail(activeUser.email);\r\n                        setcheckingExistingStatus(false);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"AXIOS ERROR: \", err);\r\n                })\r\n        }\r\n    }, [activeUser])\r\n\r\n    if (!isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!(age && location && fathersName && mothersName\r\n            && hscName && hscMarks && sscName && sscMarks)) {\r\n            M.toast({ html: '<b>All values are required to proceed.</b>', classes: 'red darken-1 ' });\r\n            return;\r\n        }\r\n\r\n        if (parseInt(age) <= 0) {\r\n            M.toast({ html: '<b>Age is invalid.</b>', classes: 'red darken-1 ' });\r\n            return;\r\n        }\r\n        if (parseFloat(hscMarks) <= 0) {\r\n            M.toast({ html: '<b>Age is invalid.</b>', classes: 'red darken-1 ' });\r\n            return;\r\n        }\r\n        if (parseFloat(sscMarks) <= 0) {\r\n            M.toast({ html: '<b>Age is invalid.</b>', classes: 'red darken-1 ' });\r\n            return;\r\n        }\r\n\r\n        setSendingDataToCloud(true);\r\n\r\n        if (isExistingStudent) {\r\n            updateExistingStudentInfo();\r\n        } else {\r\n            submitNewStudentInfo();\r\n        }\r\n    }\r\n\r\n    const submitNewStudentInfo = () => {\r\n        let data = {\r\n            \"userid\": activeUser.userid,\r\n            \"firstName\": activeUser.given_name,\r\n            \"lastName\": activeUser.family_name,\r\n            \"email\": activeUser.email,\r\n            \"age\": age,\r\n            \"location\": location,\r\n            \"fathersName\": fathersName,\r\n            \"mothersName\": mothersName,\r\n            \"hscName\": hscName,\r\n            \"hscMarks\": hscMarks,\r\n            \"sscName\": sscName,\r\n            \"sscMarks\": sscMarks\r\n        }\r\n\r\n        let postConfig = {\r\n            headers: {\r\n                'Authorization': `Bearer ${activeUser.accessToken}`\r\n            }\r\n        };\r\n\r\n        axios.post('https://10a7902a.eu-gb.apigw.appdomain.cloud/sim/post-student-info', data, postConfig)\r\n            .then((resp) => {\r\n                setSendingDataToCloud(false);\r\n                if (resp.data.error) {\r\n                    M.toast({ html: `<b>${resp.data.error}</b>`, classes: 'red darken-1 ' });\r\n                } else if (resp.data.id) {\r\n                    M.toast({ html: `<b>Thank you for your input.<br />Data updated successfully</b>`, classes: 'green darken-1 ' });\r\n                    signOut();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"AXIOS ERROR: \", err);\r\n                M.toast({ html: `<b>AXIOS ERROR: ${err}</b>`, classes: 'red darken-1 ' });\r\n                setSendingDataToCloud(false);\r\n            })\r\n    }\r\n\r\n    const updateExistingStudentInfo = () => {\r\n        if (existingDocId && existingDocRev && activeUser.email) {\r\n            let data = {\r\n                \"_id\": existingDocId,\r\n                \"_rev\": existingDocRev,\r\n                \"userid\": activeUser.userid,\r\n                \"firstName\": activeUser.given_name,\r\n                \"lastName\": activeUser.family_name,\r\n                \"email\": activeUser.email,\r\n                \"age\": age,\r\n                \"location\": location,\r\n                \"fathersName\": fathersName,\r\n                \"mothersName\": mothersName,\r\n                \"hscName\": hscName,\r\n                \"hscMarks\": hscMarks,\r\n                \"sscName\": sscName,\r\n                \"sscMarks\": sscMarks\r\n            }\r\n\r\n            let putConfig = {\r\n                headers: {\r\n                    'Authorization': `Bearer ${activeUser.accessToken}`\r\n                }\r\n            };\r\n\r\n            axios.put('https://10a7902a.eu-gb.apigw.appdomain.cloud/sim/put-student-info', data, putConfig)\r\n                .then((resp) => {\r\n                    setSendingDataToCloud(false);\r\n                    if (resp.data.error) {\r\n                        M.toast({ html: `<b>${resp.data.error}</b>`, classes: 'red darken-1 ' });\r\n                    } else if (resp.data.id) {\r\n                        M.toast({ html: `<b>Thank you for your input.<br />Data updated successfully</b>`, classes: 'green darken-1 ' });\r\n                        signOut();\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"AXIOS ERROR: \", err);\r\n                    M.toast({ html: `<b>AXIOS ERROR: ${err}</b>`, classes: 'red darken-1 ' });\r\n                    setSendingDataToCloud(false);\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 center-align\">\r\n                    {checkingExistingStatus ? (\r\n                        <h4>Checking existing status...</h4>\r\n                    ) : (\r\n                            <Fragment>\r\n                                {isExistingStudent ? (\r\n                                    <h4>Update Existing Student Info</h4>\r\n                                ) : (\r\n                                        <h4>Register New Student Info</h4>\r\n                                    )}\r\n                            </Fragment>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            {\r\n                checkingExistingStatus ? (\r\n                    <div className=\"row\">\r\n                        <div className=\"col offset-s2 s8 offset-m3 m6 offset-l4 l4 \">\r\n                            <div className=\"progress indigo lighten-4\" style={{ height: 5 }}>\r\n                                <div className=\"indeterminate indigo \"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"row\">\r\n                            <form onSubmit={(e) => handleFormSubmit(e)} className=\"col s12 l8 offset-l2\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"First Name\" id=\"first_name\" type=\"text\" className=\"validate\"\r\n                                            value={firstName} disabled\r\n                                            onChange={(e) => setFirstName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"first_name\" className=\"active\">First Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"Last Name\" id=\"last_name\" type=\"text\" className=\"validate\"\r\n                                            value={lastName} disabled\r\n                                            onChange={(e) => setLastName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"last_name\" className=\"active\">Last Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            placeholder=\"Email Id\" id=\"email_id\" type=\"text\" className=\"validate\"\r\n                                            value={email} disabled\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"email_id\" className=\"active\">Email Id</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"Age\" id=\"age\" type=\"number\" className=\"validate\"\r\n                                            value={age}\r\n                                            onChange={(e) => setAge(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"age\" className=\"active\">Age</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"Location\" id=\"location\" type=\"text\" className=\"validate\"\r\n                                            value={location}\r\n                                            onChange={(e) => setLocation(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"location\" className=\"active\">Location</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            placeholder=\"Fathers Name\" id=\"fathers_name\" type=\"text\" className=\"validate\"\r\n                                            value={fathersName}\r\n                                            onChange={(e) => setFathersName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"fathers_name\" className=\"active\">Fathers Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            placeholder=\"Mothers Name\" id=\"mothers_name\" type=\"text\" className=\"validate\"\r\n                                            value={mothersName}\r\n                                            onChange={(e) => setMothersName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"mothers_name\" className=\"active\">Mothers Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"HSC Name\" id=\"hsc_name\" type=\"text\" className=\"validate\"\r\n                                            value={hscName}\r\n                                            onChange={(e) => setHscName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"hsc_name\" className=\"active\">HSC Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"HSC %\" id=\"hscmarks\" type=\"number\" className=\"validate\"\r\n                                            value={hscMarks}\r\n                                            onChange={(e) => setHscMarks(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"hscmarks\" className=\"active\">HSC %</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"SSC Name\" id=\"ssc_name\" type=\"text\" className=\"validate\"\r\n                                            value={sscName}\r\n                                            onChange={(e) => setSscName(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"ssc_name\" className=\"active\">SSC Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12 m6\">\r\n                                        <input\r\n                                            placeholder=\"SSC %\" id=\"sscmarks\" type=\"number\" className=\"validate\"\r\n                                            value={sscMarks}\r\n                                            onChange={(e) => setSscMarks(e.target.value)}\r\n                                        />\r\n                                        <label htmlFor=\"sscmarks\" className=\"active\">SSC %</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s12 offset-m2 m8\">\r\n                                        {sendingDataToCloud ? (\r\n                                            <div className=\"progress indigo lighten-4\" style={{ height: 5 }}>\r\n                                                <div className=\"indeterminate indigo \"></div>\r\n                                            </div>\r\n                                        ) : (\r\n                                                <button className=\"waves-effect waves-light btn indigo darken-4\" style={{ width: \"100%\" }}>\r\n                                                    <span>{isExistingStudent ? (<>Update</>) : (<>Submit</>)}</span>\r\n                                                </button>\r\n                                            )}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NewStudentInfoPage\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navigation/Navbar';\nimport HomePage from './components/app/HomePage';\nimport M from 'materialize-css';\nimport { AuthContextProvider } from './contexts/AuthContext';\nimport NewStudentInfoPage from './components/app/NewStudentInfoPage';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className='App'>\n                <AuthContextProvider>\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route exact path=\"/newstudentinfo\" component={NewStudentInfoPage} />\n                    </Switch>\n                </AuthContextProvider>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}